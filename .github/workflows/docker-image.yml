name: Docker Image CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Write Enviornment File
        uses: javajawa/create-envfile@v1
        with:
          envkey_SMTP_HOST: ${{ vars.SMTP_HOST }}
          envkey_SMTP_PORT: ${{ vars.SMTP_PORT }}
          envkey_SMTP_SECURE: ${{ vars.SMTP_SECURE }}
          envkey_SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
          envkey_SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          envkey_DEFAULT_FROM: ${{ vars.NOREPLY_EMAIL }}
          envkey_DEFAULT_TO: ${{ vars.NOREPLY_EMAIL }}
          envkey_DEFAULT_SUBJECT: Automated Message
          envkey_DEFAULT_TEXT: Hello,\nThis is an automated email. This is likely a test.\n\nBest Regards,\nInnovate Apparel.
          envkey_DEFAULT_HTML: <html><h1>Hello,</h1><p><br>This is an automated email. This is likely a test.<br><br>Best Regards,<br>Innovate Apparel.</p></html
          envkey_LOGO_FILENAME: innovate-apparel-logo.png
          envkey_LOGO_TYPE: images
          envkey_LOGO_CID: logo
          envkey_CODE_TEMPLATE: ${{ vars.VERIFICATION_CODE_TEMPLATE }}
          envkey_TEXT_TEMPLATE: "Your verification code is: {{code}}"
          envkey_PORT: 3000
          envkey_LOGFILE_PATH: ${{ vars.LOGFILE_PATH }}

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag email-service

      - name: Run the Docker image
        run: docker run --env-file .env -p 8080:3000 email-service &
        
      - name: Send POST to http://localhost:8080/email/send-verification-code
        id: testCodeSend
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'http://localhost:8080/email/send-verification-code'
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"recipients": "infrastructure@innovateapparel.com", "code": "000001"}'
          
      - name: Show Response
        run: |
          echo ${{ steps.testCodeSend.outputs.response }}
